[include shell_command.cfg]
# For the ZNP Robin Nano DW v2.2 board:
#   - Compile with the processor model STM32F401.
#   - Select the 32KiB bootloader,
#   - Select (Serial (on # USART1 PA10/PA9) for the communication interface.
#   - Select (Serial (on # USART2 PA3/PA2) if you want to use the serial UART pins on J17 (wifi section)
# Note that the "make flash" command does not work with ZNP Robin boards. After running "make", run the following command:
# cp out/klipper.bin out/ZNP_ROBIN_NANO.bin
#
# Copy the file out/ZNP_ROBIN_NANO.bin to an SD card and then restart the printer with that SD card.
# See docs/Config_Reference.md for a description of parameters.

#[include timelapse.cfg]

[exclude_object]

[virtual_sdcard]
path: /home/jonny/printer_data/gcodes

[include ./KAMP/KAMP_Settings.cfg]
[include KAMP_Settings.cfg]
[include Adaptive_Meshing.cfg]
#[include input_shaper.cfg]

#[input_shaper]
#shaper_type_x = mzv
#shaper_freq_x = 0
#shaper_type_y = mzv
#shaper_freq_y = 0

#[include start.cfg]

#BED_MESH_CALIBRATE ADAPTIVE=1

#[skew_correction]

[pause_resume]

[display_status]



[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 

[gcode_macro M0]
gcode:
  PAUSE
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

[mcu]
serial: /dev/ttyUSB0
restart_method: command

[led LED_Light]
white_pin: PB9
initial_white: 1.0

[idle_timeout]
gcode:
  {% if printer.pause_resume.is_paused %}
    M118 Idle timeout while paused, turning off hotend
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
  {% else %}
    M118 Idle timeout
    TURN_OFF_HEATERS
    M84
  {% endif %}
timeout: 3600 

#[output_pin LED_Light] #toggle for LED Light - use this instead of [LED] for sonic pad
#Pin: PB9
#cycle_time: 0.01
#pwm: true
#value: 1

[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 2700
max_z_velocity: 15
max_z_accel: 100
square_corner_velocity: 5
# Use those higher values just to configure Input Shaper 
#max_accel: 10000
max_accel_to_decel: 2700

[stepper_x]
step_pin: !PC12
dir_pin: PB3
enable_pin: !PD2
microsteps: 16
rotation_distance: 40
endstop_pin: PA13
position_endstop: -6.0
position_min: -6
position_max: 235
homing_speed: 50

[stepper_y]
step_pin: PC11
dir_pin: PA15
enable_pin: !PC10
microsteps: 16
rotation_distance: 40
endstop_pin: PB8
position_endstop: 0
position_max: 235
homing_speed: 50

[stepper_z]
step_pin: PC7
dir_pin: !PC9
enable_pin: !PC8
rotation_distance: 8
microsteps: 16
position_min: -2
position_max: 280
endstop_pin: probe:z_virtual_endstop # Use Z- as endstop
homing_speed: 5.0


[extruder]
max_extrude_only_distance: 101.0
step_pin: PB10
dir_pin: PB1
enable_pin: !PC6
microsteps: 16
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA6
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC1
min_temp: 0
max_temp: 250
#min_extrude_temp: 170
# Calibrate E-Steps https://www.klipper3d.org/Rotation_Distance.html#calibrating-rotation_distance-on-extruders
rotation_distance: 7.7625
# Calibrate PID: https://www.klipper3d.org/Config_checks.html#calibrate-pid-settings
#  - Example: PID_CALIBRATE HEATER=extruder TARGET=200
control = pid
pid_kp = 30.356
pid_ki = 1.857
pid_kd = 124.081
# Calibrate PA: https://www.klipper3d.org/Pressure_Advance.html
#pressure_advance = 0.043
pressure_advance = 0.09
max_extrude_cross_section: 5

[skew_correction]
#SET_SKEW XY=140.56,141.04,99.75 XZ=140.97,140.65,99.7 YZ=141,141.15,98.82


[heater_bed]
heater_pin: PA5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC0
pwm_cycle_time: 0.020 # set to 0.0166 if your grid runs on 60Hz to fix lights flickering
max_temp: 110
min_temp: 0
# Calibrate PID: https://www.klipper3d.org/Config_checks.html#calibrate-pid-settings
#  - Example: PID_CALIBRATE HEATER=heater_bed TARGET=60
control = pid
pid_kp = 64.230
pid_ki = 0.723
pid_kd = 1425.905

[heater_fan hotend_fan]
pin: PB0
heater: extruder
heater_temp: 50.0

[fan]
pin: PA7

[force_move]
enable_force_move: True

[safe_z_home]
home_xy_position: 117.5, 117.5
z_hop: 10

[probe]
pin: ^PA8
speed: 5
lift_speed: 15
samples: 1
x_offset: -28
y_offset: 22
# Calibrate probe: https://www.klipper3d.org/Bed_Level.html
# - Example: PROBE_CALIBRATE, then adjust with TESTZ Z=+/-X
#z_offset = -0.100

[filament_switch_sensor filament_sensor]
pause_on_runout: true
switch_pin: PB4

[bed_mesh]
speed: 300
horizontal_move_z: 5.0
mesh_min: 30,30
mesh_max: 205,205
#probe_count: 6,6
probe_count: 15,15
mesh_pps: 4,4
algorithm: bicubic
#bicubic_tension: 0.2
bicubic_tension: 0.5
#fade_start: 1
fade_start: 0
fade_end: 10
fade_target: 0

[input_shaper]
# Calibrate IS: https://www.klipper3d.org/Resonance_Compensation.html
shaper_type_y = mzv
shaper_freq_y = 24.6
shaper_type_x = mzv
shaper_freq_x = 40.2

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
#min_temp: 10
#max_temp: 105

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
sensor_temperature1: 25
sensor_adc1: 0.210317
#min_temp: 0
#max_temp: 105

[gcode_macro M420]
description: Load the current mesh
gcode:
  BED_MESH_PROFILE LOAD=default
  #BED_MESH_CALIBRATE ADAPTIVE=1
[gcode_macro G29]
description: creates automated homing and bed mesh
gcode:
  BED_MESH_CLEAR
  G28
  #BED_MESH_CALIBRATE
#  BED_MESH_CALIBRATE
#  DATA_SAVE
#  SAVE_CONFIG

#[gcode_macro PRINT_START]         
#gcode:
#    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=True
#	  G92 E0
    #BED_MESH_CLEAR                                           
#	  G90             
    #BED_MESH_CALIBRATE
    #BED_MESH_PROFILE LOAD=default   
#    CLEAR_PAUSE
#    M117 Printing                   

[gcode_macro START_PRINT]
gcode:
    M413 S0 ; disable Power Loss Recovery
    M117
    G90 ; use absolute coordinates
    M83 ; extruder relative mode
    M104 S120 ; set temporary nozzle temp to prevent oozing during homing and auto bed leveling
    M140 S[bed_temperature_initial_layer_single] ; set final bed temp
    G4 S10 ; allow partial nozzle warmup
;;SET_SKEW XY=140.56,141.04,99.75 XZ=140.97,140.65,99.7 YZ=141,141.15,98.82
    SET_SKEW XY=99.9,99.85,70.6
    G29 
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE
    M420 S1 ; load mesh
    G1 Z50 F240
    G1 X2 Y10 F3000
    M104 S[nozzle_temperature_initial_layer] ; set final nozzle temp
    M190 S[bed_temperature_initial_layer_single] ; wait for bed temp to stabilize
    M109 S[nozzle_temperature_initial_layer] ; wait for nozzle temp to stabilize
    G1 Z0.28 F240
    G92 E0
    G1 Y140 E10 F1500 ; prime the nozzle
    G1 X2.3 F5000
    G92 E0
    G1 Y10 E10 F1200 ; prime the nozzle
    G92 E0


    # Final safety check before extrusion
    {% if printer.extruder.temperature >= printer.configfile["extruder"]["min_extrude_temp"] %}
        G1 Y140 E10 F1500 ; prime the nozzle
        G1 X2.3 F5000
    {% else %}
        {action_respond_info("Error: Extruder below minimum temperature")}
    {% endif %}






[gcode_macro PRINT_END]
gcode:
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False
    RUN_SHELL_COMMAND CMD=clear_plr
    clear_last_file
    {% set RUN_VELOCITY = printer.configfile.settings['printer'].max_velocity|float %}
    {% set RUN_ACCEL    = printer.configfile.settings['printer'].max_accel|float %}
    {% set RUN_DECEL    = printer.configfile.settings['printer'].max_accel_to_decel|float %}
    SET_VELOCITY_LIMIT VELOCITY={RUN_VELOCITY} ACCEL={RUN_ACCEL} ACCEL_TO_DECEL={RUN_DECEL}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE  

[firmware_retraction]
retract_length: 0.8
retract_speed: 60
unretract_extra_length: 0
unretract_speed: 60


[screws_tilt_adjust]
screw1: 60.5, 16     #screw coordinates need to be measure for YOUR specific printer
screw1_name: front left screw
screw2: 229.5, 16
screw2_name: front right screw
screw3: 229.5, 185
screw3_name: rear right screw
screw4: 60.5, 185
screw4_name: rear left screw
horizontal_move_z: 10
speed: 250.   #speed of travel moves between screws
screw_thread: CW-M4  #measure your bed screw m3=3mm / m4=4mm / m5=5mm

[gcode_macro CLEAN_NOZZLE]
gcode:
    SAVE_GCODE_STATE NAME=clean_nozzle_state
    _CG28   				# home if needed
    G90
    M211 S0 ; disable travel limits
    G1 Z10 F600
    G1 X253 F3000  			# move behind brush
    G1 Z1 F600     			# wipe height
    {% if printer.extruder.target >= 190 and (printer.extruder.target - printer.extruder.temperature)|abs <= 5 %}
        M83
        G1 E15 F250      	# purge @ 10mm^3/s
        G1 E-2 F1000     	# retract
        G4 P2000         	# wait 2s
        G92 E0
        {% for i in range(3) %}   # wipe 3 times
            G1 X234 F5000
            G1 X253 F5000
        {% endfor %}
        G1 X230 F5000
    {% endif %}
    RESTORE_GCODE_STATE NAME=clean_nozzle_state

[gcode_macro _CG28]
description: Helper: Conditional homing
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}



[gcode_macro TEST_MACRO]
gcode:
    G28
    G1 Z10 F600
    G1 X100 F3000
    G1 Y100 F3000



[axis_twist_compensation]
#speed: 50
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
#horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
calibrate_start_x: 20
#   Defines the minimum X coordinate of the calibration
#   This should be the X coordinate that positions the nozzle at the starting
#   calibration position. This parameter must be provided.
calibrate_end_x: 200
#   Defines the maximum X coordinate of the calibration
#   This should be the X coordinate that positions the nozzle at the ending
#   calibration position. This parameter must be provided.
calibrate_y: 112.5
#   Defines the Y coordinate of the calibration
#   This should be the Y coordinate that positions the nozzle during the
#   calibration process. This parameter must be provided and is recommended to
#   be near the center of the bed

######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = 2.450
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.085222, -0.067236, -0.061750, -0.036264, -0.023278, -0.021167, -0.020056, -0.011444, -0.005333, -0.009222, -0.013111, -0.002000, -0.010889, -0.014778, -0.018667
#*# 	  -0.080222, -0.087236, -0.069250, -0.041264, -0.008278, 0.001333, -0.000056, 0.008556, 0.009667, 0.023278, 0.021889, 0.028000, 0.024111, -0.002278, 0.036333
#*# 	  -0.060222, -0.054736, -0.026750, -0.006264, 0.021722, 0.036333, 0.047444, 0.061056, 0.062167, 0.063278, 0.066889, 0.075500, 0.069111, 0.050222, 0.051333
#*# 	  -0.025222, -0.014736, 0.005750, 0.028736, 0.064222, 0.063833, 0.072444, 0.083556, 0.082167, 0.090778, 0.089389, 0.095500, 0.091611, 0.072722, 0.071333
#*# 	  -0.020222, -0.012236, 0.005750, 0.031236, 0.059222, 0.063833, 0.067444, 0.073556, 0.069667, 0.070778, 0.076889, 0.080500, 0.079111, 0.065222, 0.053833
#*# 	  0.032278, 0.022764, 0.038250, 0.061236, 0.079222, 0.078833, 0.077444, 0.086056, 0.094667, 0.083278, 0.084389, 0.080500, 0.079111, 0.040222, 0.053833
#*# 	  -0.000222, 0.012764, 0.018250, 0.043736, 0.071722, 0.071333, 0.077444, 0.078556, 0.074667, 0.078278, 0.076889, 0.078000, 0.071611, 0.040222, 0.036333
#*# 	  -0.002722, -0.009736, 0.008250, 0.041236, 0.064222, 0.076333, 0.074944, 0.083556, 0.087167, 0.085778, 0.094389, 0.098000, 0.089111, 0.067722, 0.068833
#*# 	  -0.012722, -0.019736, 0.008250, 0.036236, 0.054222, 0.068833, 0.077444, 0.106056, 0.094667, 0.100778, 0.104389, 0.110500, 0.109111, 0.087722, 0.078833
#*# 	  -0.005222, 0.005264, 0.028250, 0.051236, 0.081722, 0.088833, 0.092444, 0.108556, 0.104667, 0.115778, 0.116889, 0.120500, 0.111611, 0.085222, 0.093833
#*# 	  -0.010222, 0.007764, 0.020750, 0.053736, 0.071722, 0.073833, 0.074944, 0.093556, 0.094667, 0.095778, 0.084389, 0.090500, 0.081611, 0.070222, 0.056333
#*# 	  0.012278, 0.005264, 0.023250, 0.043736, 0.076722, 0.083833, 0.079944, 0.076056, 0.074667, 0.075778, 0.076889, 0.083000, 0.074111, 0.050222, 0.041333
#*# 	  -0.020222, -0.014736, 0.003250, 0.026236, 0.054222, 0.056333, 0.064944, 0.073556, 0.072167, 0.073278, 0.071889, 0.075500, 0.066611, 0.045222, 0.041333
#*# 	  -0.037722, -0.014736, 0.003250, 0.028736, 0.056722, 0.078833, 0.072444, 0.076056, 0.077167, 0.078278, 0.079389, 0.088000, 0.081611, 0.052722, 0.058833
#*# 	  -0.062722, -0.054736, -0.031750, 0.011236, 0.024222, 0.036333, 0.044944, 0.051056, 0.052167, 0.055778, 0.066889, 0.080500, 0.051611, 0.020222, 0.026333
#*# tension = 0.5
#*# min_x = 30.0
#*# algo = bicubic
#*# y_count = 15
#*# mesh_y_pps = 4
#*# min_y = 30.0
#*# x_count = 15
#*# max_y = 205.0
#*# mesh_x_pps = 4
#*# max_x = 205.0
#*#
#*# [skew_correction my_skew_profile]
#*# xy_skew = 0.0005006259133241275
#*# xz_skew = 0.002272576830037191
#*# yz_skew = -0.0010634496843668826
#*#
#*# [input_shaper]
#*#
#*# [axis_twist_compensation]
#*# z_compensations = -0.082500, 0.065000, 0.055000
#*# compensation_start_x = 20.0
#*# compensation_end_x = 200.0
